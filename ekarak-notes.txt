add this to ozw_types.h in class RemoteValueID:

// ekarak: constructor from ValueID
  RemoteValueID(ValueID vid) : 
    _homeId ((int32_t) vid.GetHomeId()), 
    _nodeId ((int8_t) vid.GetNodeId()), 
    _genre  ((RemoteValueGenre::type) vid.GetGenre()),
    _commandClassId((int8_t) vid.GetCommandClassId()), 
      _instance ((int8_t) vid.GetInstance()), 
      _valueIndex((int8_t) vid.GetIndex()),
    _type ((RemoteValueType::type) vid.GetType()) { }
// ekarak: converter to ValueID
ValueID toValueID() const {
    return ValueID((uint32)_homeId, (uint8)_nodeId, (ValueID::ValueGenre)_genre, (uint8)_commandClassId, (uint8)_instance, (uint8)_valueIndex, (ValueID::ValueType)_type);
}



thrift -gen cpp ozw.thrift  
ruby1.9.1 create_server.rb
gcc -c gen-cpp/RemoteManager_server.cpp -I/usr/local/include/thrift/ -I/home/ekarak/ozw/open-zwave-read-only/cpp/src -I/home/ekarak/ozw/open-zwave-read-only/cpp/src/value_classes
gcc -c gen-cpp/RemoteManager_server.cpp -I/usr/local/include/thrift/ -I/home/ekarak/ozw/open-zwave-read-only/cpp/src -I/home/ekarak/ozw/open-zwave-read-only/cpp/src/value_classes -lthrift /home/ekarak/ozw/open-zwave-read-only/cpp/lib/linux/openzwave.a -ludev 

gcc -c RemoteManager.cpp -I/usr/local/include/thrift/ -I/home/ekarak/ozw/open-zwave-read-only/cpp/src -I/home/ekarak/ozw/open-zwave-read-only/cpp/src/value_classes
gcc RemoteManager_server.cpp -I/usr/local/include/thrift/ -I/home/ekarak/ozw/open-zwave-read-only/cpp/src -I/home/ekarak/ozw/open-zwave-read-only/cpp/src/value_classes -lthrift /home/ekarak/ozw/open-zwave-read-only/cpp/lib/linux/openzwave.a -ludev ozw_*.o RemoteManager.o 