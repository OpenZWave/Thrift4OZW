// This autogenerated skeleton file illustrates how to build a server.
// You should copy it to another filename to avoid overwriting it.

#include "RemoteManager.h"
#include <protocol/TBinaryProtocol.h>
#include <server/TSimpleServer.h>
#include <transport/TServerSocket.h>
#include <transport/TBufferTransports.h>

using namespace ::apache::thrift;
using namespace ::apache::thrift::protocol;
using namespace ::apache::thrift::transport;
using namespace ::apache::thrift::server;

using boost::shared_ptr;

using namespace OpenZWave;

class RemoteManagerHandler : virtual public RemoteManagerIf {
 public:
  RemoteManagerHandler() {
    // Your initialization goes here
  }

  void WriteConfig(const int32_t _homeId) {
    // Your implementation goes here
    printf("WriteConfig\n");
  }

  int8_t GetControllerNodeId(const int32_t _homeId) {
    // Your implementation goes here
    printf("GetControllerNodeId\n");
  }

  bool IsPrimaryController(const int32_t _homeId) {
    // Your implementation goes here
    printf("IsPrimaryController\n");
  }

  bool IsStaticUpdateController(const int32_t _homeId) {
    // Your implementation goes here
    printf("IsStaticUpdateController\n");
  }

  bool IsBridgeController(const int32_t _homeId) {
    // Your implementation goes here
    printf("IsBridgeController\n");
  }

  void GetLibraryVersion(std::string& _return, const int32_t _homeId) {
    // Your implementation goes here
    printf("GetLibraryVersion\n");
  }

  void GetLibraryTypeName(std::string& _return, const int32_t _homeId) {
    // Your implementation goes here
    printf("GetLibraryTypeName\n");
  }

  int32_t GetSendQueueCount(const int32_t _homeId) {
    // Your implementation goes here
    printf("GetSendQueueCount\n");
  }

  int32_t GetPollInterval() {
    // Your implementation goes here
    printf("GetPollInterval\n");
  }

  void SetPollInterval(const int32_t _seconds) {
    // Your implementation goes here
    printf("SetPollInterval\n");
  }

  bool EnablePoll(const RemoteValueID& _valueId) {
    // Your implementation goes here
    printf("EnablePoll\n");
  }

  bool DisablePoll(const RemoteValueID& _valueId) {
    // Your implementation goes here
    printf("DisablePoll\n");
  }

  bool isPolled(const RemoteValueID& _valueId) {
    // Your implementation goes here
    printf("isPolled\n");
  }

  bool RefreshNodeInfo(const int32_t _homeId, const int8_t _nodeId) {
    // Your implementation goes here
    printf("RefreshNodeInfo\n");
  }

  bool RequestNodeState(const int32_t _homeId, const int8_t _nodeId) {
    // Your implementation goes here
    printf("RequestNodeState\n");
  }

  bool RequestNodeDynamic(const int32_t _homeId, const int8_t _nodeId) {
    // Your implementation goes here
    printf("RequestNodeDynamic\n");
  }

  bool IsNodeListeningDevice(const int32_t _homeId, const int8_t _nodeId) {
    // Your implementation goes here
    printf("IsNodeListeningDevice\n");
  }

  bool IsNodeFrequentListeningDevice(const int32_t _homeId, const int8_t _nodeId) {
    // Your implementation goes here
    printf("IsNodeFrequentListeningDevice\n");
  }

  bool IsNodeBeamingDevice(const int32_t _homeId, const int8_t _nodeId) {
    // Your implementation goes here
    printf("IsNodeBeamingDevice\n");
  }

  bool IsNodeRoutingDevice(const int32_t _homeId, const int8_t _nodeId) {
    // Your implementation goes here
    printf("IsNodeRoutingDevice\n");
  }

  bool IsNodeSecurityDevice(const int32_t _homeId, const int8_t _nodeId) {
    // Your implementation goes here
    printf("IsNodeSecurityDevice\n");
  }

  int32_t GetNodeMaxBaudRate(const int32_t _homeId, const int8_t _nodeId) {
    // Your implementation goes here
    printf("GetNodeMaxBaudRate\n");
  }

  int8_t GetNodeVersion(const int32_t _homeId, const int8_t _nodeId) {
    // Your implementation goes here
    printf("GetNodeVersion\n");
  }

  int8_t GetNodeBasic(const int32_t _homeId, const int8_t _nodeId) {
    // Your implementation goes here
    printf("GetNodeBasic\n");
  }

  int8_t GetNodeGeneric(const int32_t _homeId, const int8_t _nodeId) {
    // Your implementation goes here
    printf("GetNodeGeneric\n");
  }

  int8_t GetNodeSpecific(const int32_t _homeId, const int8_t _nodeId) {
    // Your implementation goes here
    printf("GetNodeSpecific\n");
  }

  void GetNodeType(std::string& _return, const int32_t _homeId, const int8_t _nodeId) {
    // Your implementation goes here
    printf("GetNodeType\n");
  }

  void GetNodeNeighbors(UInt32_ListByte& _return, const int32_t _homeId, const int8_t _nodeId) {
    // Your implementation goes here
    printf("GetNodeNeighbors\n");
  }

  void GetNodeManufacturerName(std::string& _return, const int32_t _homeId, const int8_t _nodeId) {
    // Your implementation goes here
    printf("GetNodeManufacturerName\n");
  }

  void GetNodeProductName(std::string& _return, const int32_t _homeId, const int8_t _nodeId) {
    // Your implementation goes here
    printf("GetNodeProductName\n");
  }

  void GetNodeName(std::string& _return, const int32_t _homeId, const int8_t _nodeId) {
    // Your implementation goes here
    printf("GetNodeName\n");
  }

  void GetNodeLocation(std::string& _return, const int32_t _homeId, const int8_t _nodeId) {
    // Your implementation goes here
    printf("GetNodeLocation\n");
  }

  void GetNodeManufacturerId(std::string& _return, const int32_t _homeId, const int8_t _nodeId) {
    // Your implementation goes here
    printf("GetNodeManufacturerId\n");
  }

  void GetNodeProductType(std::string& _return, const int32_t _homeId, const int8_t _nodeId) {
    // Your implementation goes here
    printf("GetNodeProductType\n");
  }

  void GetNodeProductId(std::string& _return, const int32_t _homeId, const int8_t _nodeId) {
    // Your implementation goes here
    printf("GetNodeProductId\n");
  }

  void SetNodeManufacturerName(const int32_t _homeId, const int8_t _nodeId, const std::string& _manufacturerName) {
    // Your implementation goes here
    printf("SetNodeManufacturerName\n");
  }

  void SetNodeProductName(const int32_t _homeId, const int8_t _nodeId, const std::string& _productName) {
    // Your implementation goes here
    printf("SetNodeProductName\n");
  }

  void SetNodeName(const int32_t _homeId, const int8_t _nodeId, const std::string& _nodeName) {
    // Your implementation goes here
    printf("SetNodeName\n");
  }

  void SetNodeLocation(const int32_t _homeId, const int8_t _nodeId, const std::string& _location) {
    // Your implementation goes here
    printf("SetNodeLocation\n");
  }

  void SetNodeOn(const int32_t _homeId, const int8_t _nodeId) {
    // Your implementation goes here
    printf("SetNodeOn\n");
  }

  void SetNodeOff(const int32_t _homeId, const int8_t _nodeId) {
    // Your implementation goes here
    printf("SetNodeOff\n");
  }

  void SetNodeLevel(const int32_t _homeId, const int8_t _nodeId, const int8_t _level) {
    // Your implementation goes here
    printf("SetNodeLevel\n");
  }

  bool IsNodeInfoReceived(const int32_t _homeId, const int8_t _nodeId) {
    // Your implementation goes here
    printf("IsNodeInfoReceived\n");
  }

  void GetNodeClassInformation(Bool_GetNodeClassInformation& _return, const int32_t _homeId, const int8_t _nodeId, const int8_t _commandClassId) {
    // Your implementation goes here
    printf("GetNodeClassInformation\n");
  }

  void GetValueLabel(std::string& _return, const RemoteValueID& _id) {
    // Your implementation goes here
    printf("GetValueLabel\n");
  }

  void SetValueLabel(const RemoteValueID& _id, const std::string& _value) {
    // Your implementation goes here
    printf("SetValueLabel\n");
  }

  void GetValueUnits(std::string& _return, const RemoteValueID& _id) {
    // Your implementation goes here
    printf("GetValueUnits\n");
  }

  void SetValueUnits(const RemoteValueID& _id, const std::string& _value) {
    // Your implementation goes here
    printf("SetValueUnits\n");
  }

  void GetValueHelp(std::string& _return, const RemoteValueID& _id) {
    // Your implementation goes here
    printf("GetValueHelp\n");
  }

  void SetValueHelp(const RemoteValueID& _id, const std::string& _value) {
    // Your implementation goes here
    printf("SetValueHelp\n");
  }

  int32_t GetValueMin(const RemoteValueID& _id) {
    // Your implementation goes here
    printf("GetValueMin\n");
  }

  int32_t GetValueMax(const RemoteValueID& _id) {
    // Your implementation goes here
    printf("GetValueMax\n");
  }

  bool IsValueReadOnly(const RemoteValueID& _id) {
    // Your implementation goes here
    printf("IsValueReadOnly\n");
  }

  bool IsValueWriteOnly(const RemoteValueID& _id) {
    // Your implementation goes here
    printf("IsValueWriteOnly\n");
  }

  bool IsValueSet(const RemoteValueID& _id) {
    // Your implementation goes here
    printf("IsValueSet\n");
  }

  void GetValueAsBool(Bool_Bool& _return, const RemoteValueID& _id) {
    // Your implementation goes here
    printf("GetValueAsBool\n");
  }

  void GetValueAsByte(Bool_UInt8& _return, const RemoteValueID& _id) {
    // Your implementation goes here
    printf("GetValueAsByte\n");
  }

  void GetValueAsFloat(Bool_Float& _return, const RemoteValueID& _id) {
    // Your implementation goes here
    printf("GetValueAsFloat\n");
  }

  void GetValueAsInt(Bool_Int& _return, const RemoteValueID& _id) {
    // Your implementation goes here
    printf("GetValueAsInt\n");
  }

  void GetValueAsShort(Bool_Int16& _return, const RemoteValueID& _id) {
    // Your implementation goes here
    printf("GetValueAsShort\n");
  }

  void GetValueAsString(Bool_String& _return, const RemoteValueID& _id) {
    // Your implementation goes here
    printf("GetValueAsString\n");
  }

  void GetValueListSelection_String(Bool_String& _return, const RemoteValueID& _id) {
    // Your implementation goes here
    printf("GetValueListSelection_String\n");
  }

  void GetValueListSelection_Int32(Bool_Int& _return, const RemoteValueID& _id) {
    // Your implementation goes here
    printf("GetValueListSelection_Int32\n");
  }

  void GetValueListItems(Bool_ListString& _return, const RemoteValueID& _id) {
    // Your implementation goes here
    printf("GetValueListItems\n");
  }

  void GetValueFloatPrecision(Bool_UInt8& _return, const RemoteValueID& _id) {
    // Your implementation goes here
    printf("GetValueFloatPrecision\n");
  }

  bool SetValue_Bool(const RemoteValueID& _id, const bool _value) {
    // Your implementation goes here
    printf("SetValue_Bool\n");
  }

  bool SetValue_UInt8(const RemoteValueID& _id, const int8_t _value) {
    // Your implementation goes here
    printf("SetValue_UInt8\n");
  }

  bool SetValue_Float(const RemoteValueID& _id, const double _value) {
    // Your implementation goes here
    printf("SetValue_Float\n");
  }

  bool SetValue_Int32(const RemoteValueID& _id, const int32_t _value) {
    // Your implementation goes here
    printf("SetValue_Int32\n");
  }

  bool SetValue_Int16(const RemoteValueID& _id, const int16_t _value) {
    // Your implementation goes here
    printf("SetValue_Int16\n");
  }

  bool SetValue_String(const RemoteValueID& _id, const std::string& _value) {
    // Your implementation goes here
    printf("SetValue_String\n");
  }

  bool SetValueListSelection(const RemoteValueID& _id, const std::string& _selectedItem) {
    // Your implementation goes here
    printf("SetValueListSelection\n");
  }

  bool RefreshValue(const RemoteValueID& _id) {
    // Your implementation goes here
    printf("RefreshValue\n");
  }

  bool PressButton(const RemoteValueID& _id) {
    // Your implementation goes here
    printf("PressButton\n");
  }

  bool ReleaseButton(const RemoteValueID& _id) {
    // Your implementation goes here
    printf("ReleaseButton\n");
  }

  int8_t GetNumSwitchPoints(const RemoteValueID& _id) {
    // Your implementation goes here
    printf("GetNumSwitchPoints\n");
  }

  bool SetSwitchPoint(const RemoteValueID& _id, const int8_t _hours, const int8_t _minutes, const int8_t _setback) {
    // Your implementation goes here
    printf("SetSwitchPoint\n");
  }

  bool RemoveSwitchPoint(const RemoteValueID& _id, const int8_t _hours, const int8_t _minutes) {
    // Your implementation goes here
    printf("RemoveSwitchPoint\n");
  }

  void ClearSwitchPoints(const RemoteValueID& _id) {
    // Your implementation goes here
    printf("ClearSwitchPoints\n");
  }

  void GetSwitchPoint(GetSwitchPointReturnStruct& _return, const RemoteValueID& _id, const int8_t _idx) {
    // Your implementation goes here
    printf("GetSwitchPoint\n");
  }

  void SwitchAllOn(const int32_t _homeId) {
    // Your implementation goes here
    printf("SwitchAllOn\n");
  }

  void SwitchAllOff(const int32_t _homeId) {
    // Your implementation goes here
    printf("SwitchAllOff\n");
  }

  bool SetConfigParam(const int32_t _homeId, const int8_t _nodeId, const int8_t _param, const int32_t _value, const int8_t _size) {
    // Your implementation goes here
    printf("SetConfigParam\n");
  }

  void RequestConfigParam(const int32_t _homeId, const int8_t _nodeId, const int8_t _param) {
    // Your implementation goes here
    printf("RequestConfigParam\n");
  }

  void RequestAllConfigParams(const int32_t _homeId, const int8_t _nodeId) {
    // Your implementation goes here
    printf("RequestAllConfigParams\n");
  }

  int8_t GetNumGroups(const int32_t _homeId, const int8_t _nodeId) {
    // Your implementation goes here
    printf("GetNumGroups\n");
  }

  void GetAssociations(GetAssociationsReturnStruct& _return, const int32_t _homeId, const int8_t _nodeId, const int8_t _groupIdx) {
    // Your implementation goes here
    printf("GetAssociations\n");
  }

  int8_t GetMaxAssociations(const int32_t _homeId, const int8_t _nodeId, const int8_t _groupIdx) {
    // Your implementation goes here
    printf("GetMaxAssociations\n");
  }

  void GetGroupLabel(std::string& _return, const int32_t _homeId, const int8_t _nodeId, const int8_t _groupIdx) {
    // Your implementation goes here
    printf("GetGroupLabel\n");
  }

  void AddAssociation(const int32_t _homeId, const int8_t _nodeId, const int8_t _groupIdx, const int8_t _targetNodeId) {
    // Your implementation goes here
    printf("AddAssociation\n");
  }

  void RemoveAssociation(const int32_t _homeId, const int8_t _nodeId, const int8_t _groupIdx, const int8_t _targetNodeId) {
    // Your implementation goes here
    printf("RemoveAssociation\n");
  }

  void ResetController(const int32_t _homeId) {
    // Your implementation goes here
    printf("ResetController\n");
  }

  void SoftReset(const int32_t _homeId) {
    // Your implementation goes here
    printf("SoftReset\n");
  }

  bool BeginControllerCommand(const int32_t _homeId, const DriverControllerCommand::type _command, const bool _highPower, const int8_t _nodeId, const int8_t _arg) {
    // Your implementation goes here
    printf("BeginControllerCommand\n");
  }

  bool CancelControllerCommand(const int32_t _homeId) {
    // Your implementation goes here
    printf("CancelControllerCommand\n");
  }

  int8_t GetNumScenes() {
    // Your implementation goes here
    printf("GetNumScenes\n");
  }

  void GetAllScenes(GetAllScenesReturnStruct& _return) {
    // Your implementation goes here
    printf("GetAllScenes\n");
  }

  int8_t CreateScene() {
    // Your implementation goes here
    printf("CreateScene\n");
  }

  bool RemoveScene(const int8_t _sceneId) {
    // Your implementation goes here
    printf("RemoveScene\n");
  }

  bool AddSceneValue_Bool(const int8_t _sceneId, const RemoteValueID& _valueId, const bool _value) {
    // Your implementation goes here
    printf("AddSceneValue_Bool\n");
  }

  bool AddSceneValue_Uint8(const int8_t _sceneId, const RemoteValueID& _valueId, const int8_t _value) {
    // Your implementation goes here
    printf("AddSceneValue_Uint8\n");
  }

  bool AddSceneValue_Float(const int8_t _sceneId, const RemoteValueID& _valueId, const double _value) {
    // Your implementation goes here
    printf("AddSceneValue_Float\n");
  }

  bool AddSceneValue_Int32(const int8_t _sceneId, const RemoteValueID& _valueId, const int32_t _value) {
    // Your implementation goes here
    printf("AddSceneValue_Int32\n");
  }

  bool AddSceneValue_Int16(const int8_t _sceneId, const RemoteValueID& _valueId, const int16_t _value) {
    // Your implementation goes here
    printf("AddSceneValue_Int16\n");
  }

  bool AddSceneValue_String(const int8_t _sceneId, const RemoteValueID& _valueId, const std::string& _value) {
    // Your implementation goes here
    printf("AddSceneValue_String\n");
  }

  bool AddSceneValueListSelection_String(const int8_t _sceneId, const RemoteValueID& _valueId, const std::string& _value) {
    // Your implementation goes here
    printf("AddSceneValueListSelection_String\n");
  }

  bool AddSceneValueListSelection_Int32(const int8_t _sceneId, const RemoteValueID& _valueId, const int32_t _value) {
    // Your implementation goes here
    printf("AddSceneValueListSelection_Int32\n");
  }

  bool RemoveSceneValue(const int8_t _sceneId, const RemoteValueID& _valueId) {
    // Your implementation goes here
    printf("RemoveSceneValue\n");
  }

  void SceneGetValues(SceneGetValuesReturnStruct& _return, const int8_t _sceneId) {
    // Your implementation goes here
    printf("SceneGetValues\n");
  }

  void SceneGetValueAsBool(Bool_Bool& _return, const int8_t _sceneId, const RemoteValueID& _valueId) {
    // Your implementation goes here
    printf("SceneGetValueAsBool\n");
  }

  void SceneGetValueAsByte(Bool_UInt8& _return, const int8_t _sceneId, const RemoteValueID& _valueId) {
    // Your implementation goes here
    printf("SceneGetValueAsByte\n");
  }

  void SceneGetValueAsFloat(Bool_Float& _return, const int8_t _sceneId, const RemoteValueID& _valueId) {
    // Your implementation goes here
    printf("SceneGetValueAsFloat\n");
  }

  void SceneGetValueAsInt(Bool_Int& _return, const int8_t _sceneId, const RemoteValueID& _valueId) {
    // Your implementation goes here
    printf("SceneGetValueAsInt\n");
  }

  void SceneGetValueAsShort(Bool_Int16& _return, const int8_t _sceneId, const RemoteValueID& _valueId) {
    // Your implementation goes here
    printf("SceneGetValueAsShort\n");
  }

  void SceneGetValueAsString(Bool_String& _return, const int8_t _sceneId, const RemoteValueID& _valueId) {
    // Your implementation goes here
    printf("SceneGetValueAsString\n");
  }

  void SceneGetValueListSelection_String(Bool_String& _return, const int8_t _sceneId, const RemoteValueID& _valueId) {
    // Your implementation goes here
    printf("SceneGetValueListSelection_String\n");
  }

  void SceneGetValueListSelection_Int32(Bool_Int& _return, const int8_t _sceneId, const RemoteValueID& _valueId) {
    // Your implementation goes here
    printf("SceneGetValueListSelection_Int32\n");
  }

  bool SetSceneValue_Bool(const int8_t _sceneId, const RemoteValueID& _valueId, const bool _value) {
    // Your implementation goes here
    printf("SetSceneValue_Bool\n");
  }

  bool SetSceneValue_Uint8(const int8_t _sceneId, const RemoteValueID& _valueId, const int8_t _value) {
    // Your implementation goes here
    printf("SetSceneValue_Uint8\n");
  }

  bool SetSceneValue_Float(const int8_t _sceneId, const RemoteValueID& _valueId, const double _value) {
    // Your implementation goes here
    printf("SetSceneValue_Float\n");
  }

  bool SetSceneValue_Int32(const int8_t _sceneId, const RemoteValueID& _valueId, const int32_t _value) {
    // Your implementation goes here
    printf("SetSceneValue_Int32\n");
  }

  bool SetSceneValue_Int16(const int8_t _sceneId, const RemoteValueID& _valueId, const int16_t _value) {
    // Your implementation goes here
    printf("SetSceneValue_Int16\n");
  }

  bool SetSceneValue_String(const int8_t _sceneId, const RemoteValueID& _valueId, const std::string& _value) {
    // Your implementation goes here
    printf("SetSceneValue_String\n");
  }

  bool SetSceneValueListSelection_String(const int8_t _sceneId, const RemoteValueID& _valueId, const std::string& _value) {
    // Your implementation goes here
    printf("SetSceneValueListSelection_String\n");
  }

  bool SetSceneValueListSelection_Int32(const int8_t _sceneId, const RemoteValueID& _valueId, const int32_t _value) {
    // Your implementation goes here
    printf("SetSceneValueListSelection_Int32\n");
  }

  void GetSceneLabel(std::string& _return, const int8_t _sceneId) {
    // Your implementation goes here
    printf("GetSceneLabel\n");
  }

  void SetSceneLabel(const int8_t _sceneId, const std::string& _value) {
    // Your implementation goes here
    printf("SetSceneLabel\n");
  }

  bool SceneExists(const int8_t _sceneId) {
    // Your implementation goes here
    printf("SceneExists\n");
  }

  bool ActivateScene(const int8_t _sceneId) {
    // Your implementation goes here
    printf("ActivateScene\n");
  }

  void GetDriverStatistics(GetDriverStatisticsReturnStruct& _return, const int32_t _homeId) {
    // Your implementation goes here
    printf("GetDriverStatistics\n");
  }

  void SendAllValues() {
    // Your implementation goes here
    printf("SendAllValues\n");
  }

};

int main(int argc, char **argv) {
  int port = 9090;
  shared_ptr<RemoteManagerHandler> handler(new RemoteManagerHandler());
  shared_ptr<TProcessor> processor(new RemoteManagerProcessor(handler));
  shared_ptr<TServerTransport> serverTransport(new TServerSocket(port));
  shared_ptr<TTransportFactory> transportFactory(new TBufferedTransportFactory());
  shared_ptr<TProtocolFactory> protocolFactory(new TBinaryProtocolFactory());

  TSimpleServer server(processor, serverTransport, transportFactory, protocolFactory);
  server.serve();
  return 0;
}

