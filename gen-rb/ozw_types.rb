#
# Autogenerated by Thrift Compiler (0.7.0)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#


module OpenZWave
    module RemoteValueGenre
      ValueGenre_Basic = 0
      ValueGenre_User = 1
      ValueGenre_Config = 2
      ValueGenre_System = 3
      ValueGenre_Count = 4
      VALUE_MAP = {0 => "ValueGenre_Basic", 1 => "ValueGenre_User", 2 => "ValueGenre_Config", 3 => "ValueGenre_System", 4 => "ValueGenre_Count"}
      VALID_VALUES = Set.new([ValueGenre_Basic, ValueGenre_User, ValueGenre_Config, ValueGenre_System, ValueGenre_Count]).freeze
    end

    module RemoteValueType
      ValueType_Bool = 0
      ValueType_Byte = 1
      ValueType_Decimal = 2
      ValueType_Int = 3
      ValueType_List = 4
      ValueType_Schedule = 5
      ValueType_Short = 6
      ValueType_String = 7
      ValueType_Button = 8
      ValueType_Max = 8
      VALUE_MAP = {0 => "ValueType_Bool", 1 => "ValueType_Byte", 2 => "ValueType_Decimal", 3 => "ValueType_Int", 4 => "ValueType_List", 5 => "ValueType_Schedule", 6 => "ValueType_Short", 7 => "ValueType_String", 8 => "ValueType_Button", 8 => "ValueType_Max"}
      VALID_VALUES = Set.new([ValueType_Bool, ValueType_Byte, ValueType_Decimal, ValueType_Int, ValueType_List, ValueType_Schedule, ValueType_Short, ValueType_String, ValueType_Button, ValueType_Max]).freeze
    end

    class RemoteValueID
      include ::Thrift::Struct, ::Thrift::Struct_Union
      _HOMEID = 1
      _NODEID = 2
      _GENRE = 3
      _COMMANDCLASSID = 4
      _INSTANCE = 5
      _VALUEINDEX = 6
      _TYPE = 7

      FIELDS = {
        _HOMEID => {:type => ::Thrift::Types::I32, :name => '_homeId'},
        _NODEID => {:type => ::Thrift::Types::BYTE, :name => '_nodeId'},
        _GENRE => {:type => ::Thrift::Types::I32, :name => '_genre', :enum_class => OpenZWave::RemoteValueGenre},
        _COMMANDCLASSID => {:type => ::Thrift::Types::BYTE, :name => '_commandClassId'},
        _INSTANCE => {:type => ::Thrift::Types::BYTE, :name => '_instance'},
        _VALUEINDEX => {:type => ::Thrift::Types::BYTE, :name => '_valueIndex'},
        _TYPE => {:type => ::Thrift::Types::I32, :name => '_type', :enum_class => OpenZWave::RemoteValueType}
      }

      def struct_fields; FIELDS; end

      def validate
        unless @_genre.nil? || OpenZWave::RemoteValueGenre::VALID_VALUES.include?(@_genre)
          raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field _genre!')
        end
        unless @_type.nil? || OpenZWave::RemoteValueType::VALID_VALUES.include?(@_type)
          raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field _type!')
        end
      end

      ::Thrift::Struct.generate_accessors self
    end

    class GetSwitchPointReturnStruct
      include ::Thrift::Struct, ::Thrift::Struct_Union
      O_HOURS = 1
      O_MINUTES = 2
      O_SETBACK = 3

      FIELDS = {
        O_HOURS => {:type => ::Thrift::Types::BYTE, :name => 'o_hours'},
        O_MINUTES => {:type => ::Thrift::Types::BYTE, :name => 'o_minutes'},
        O_SETBACK => {:type => ::Thrift::Types::BYTE, :name => 'o_setback'}
      }

      def struct_fields; FIELDS; end

      def validate
      end

      ::Thrift::Struct.generate_accessors self
    end

    class Bool_Bool
      include ::Thrift::Struct, ::Thrift::Struct_Union
      RETVAL = 1
      O_VALUE = 2

      FIELDS = {
        RETVAL => {:type => ::Thrift::Types::BOOL, :name => 'retval'},
        O_VALUE => {:type => ::Thrift::Types::BOOL, :name => 'o_value'}
      }

      def struct_fields; FIELDS; end

      def validate
      end

      ::Thrift::Struct.generate_accessors self
    end

    class Bool_UInt8
      include ::Thrift::Struct, ::Thrift::Struct_Union
      RETVAL = 1
      O_VALUE = 2

      FIELDS = {
        RETVAL => {:type => ::Thrift::Types::BOOL, :name => 'retval'},
        O_VALUE => {:type => ::Thrift::Types::BYTE, :name => 'o_value'}
      }

      def struct_fields; FIELDS; end

      def validate
      end

      ::Thrift::Struct.generate_accessors self
    end

    class Bool_Float
      include ::Thrift::Struct, ::Thrift::Struct_Union
      RETVAL = 1
      O_VALUE = 2

      FIELDS = {
        RETVAL => {:type => ::Thrift::Types::BOOL, :name => 'retval'},
        O_VALUE => {:type => ::Thrift::Types::DOUBLE, :name => 'o_value'}
      }

      def struct_fields; FIELDS; end

      def validate
      end

      ::Thrift::Struct.generate_accessors self
    end

    class Bool_Int
      include ::Thrift::Struct, ::Thrift::Struct_Union
      RETVAL = 1
      O_VALUE = 2

      FIELDS = {
        RETVAL => {:type => ::Thrift::Types::BOOL, :name => 'retval'},
        O_VALUE => {:type => ::Thrift::Types::I32, :name => 'o_value'}
      }

      def struct_fields; FIELDS; end

      def validate
      end

      ::Thrift::Struct.generate_accessors self
    end

    class Bool_Int16
      include ::Thrift::Struct, ::Thrift::Struct_Union
      RETVAL = 1
      O_VALUE = 2

      FIELDS = {
        RETVAL => {:type => ::Thrift::Types::BOOL, :name => 'retval'},
        O_VALUE => {:type => ::Thrift::Types::I16, :name => 'o_value'}
      }

      def struct_fields; FIELDS; end

      def validate
      end

      ::Thrift::Struct.generate_accessors self
    end

    class Bool_String
      include ::Thrift::Struct, ::Thrift::Struct_Union
      RETVAL = 1
      O_VALUE = 2

      FIELDS = {
        RETVAL => {:type => ::Thrift::Types::BOOL, :name => 'retval'},
        O_VALUE => {:type => ::Thrift::Types::STRING, :name => 'o_value'}
      }

      def struct_fields; FIELDS; end

      def validate
      end

      ::Thrift::Struct.generate_accessors self
    end

    class Bool_ListString
      include ::Thrift::Struct, ::Thrift::Struct_Union
      RETVAL = 1
      O_VALUE = 2

      FIELDS = {
        RETVAL => {:type => ::Thrift::Types::BOOL, :name => 'retval'},
        O_VALUE => {:type => ::Thrift::Types::LIST, :name => 'o_value', :element => {:type => ::Thrift::Types::STRING}}
      }

      def struct_fields; FIELDS; end

      def validate
      end

      ::Thrift::Struct.generate_accessors self
    end

    class UInt32_ListByte
      include ::Thrift::Struct, ::Thrift::Struct_Union
      RETVAL = 1
      _NODENEIGHBORS = 2

      FIELDS = {
        RETVAL => {:type => ::Thrift::Types::I32, :name => 'retval'},
        _NODENEIGHBORS => {:type => ::Thrift::Types::LIST, :name => '_nodeNeighbors', :element => {:type => ::Thrift::Types::BYTE}}
      }

      def struct_fields; FIELDS; end

      def validate
      end

      ::Thrift::Struct.generate_accessors self
    end

    class Bool_GetNodeClassInformation
      include ::Thrift::Struct, ::Thrift::Struct_Union
      RETVAL = 1
      _CLASSNAME = 2
      _CLASSVERSION = 3

      FIELDS = {
        RETVAL => {:type => ::Thrift::Types::BOOL, :name => 'retval'},
        _CLASSNAME => {:type => ::Thrift::Types::STRING, :name => '_className'},
        _CLASSVERSION => {:type => ::Thrift::Types::BYTE, :name => '_classVersion'}
      }

      def struct_fields; FIELDS; end

      def validate
      end

      ::Thrift::Struct.generate_accessors self
    end

    class GetAssociationsReturnStruct
      include ::Thrift::Struct, ::Thrift::Struct_Union
      RETVAL = 1
      O_ASSOCIATIONS = 2

      FIELDS = {
        RETVAL => {:type => ::Thrift::Types::I32, :name => 'retval'},
        O_ASSOCIATIONS => {:type => ::Thrift::Types::LIST, :name => 'o_associations', :element => {:type => ::Thrift::Types::BYTE}}
      }

      def struct_fields; FIELDS; end

      def validate
      end

      ::Thrift::Struct.generate_accessors self
    end

    class GetAllScenesReturnStruct
      include ::Thrift::Struct, ::Thrift::Struct_Union
      RETVAL = 1
      _SCENEIDS = 2

      FIELDS = {
        RETVAL => {:type => ::Thrift::Types::BYTE, :name => 'retval'},
        _SCENEIDS => {:type => ::Thrift::Types::LIST, :name => '_sceneIds', :element => {:type => ::Thrift::Types::BYTE}}
      }

      def struct_fields; FIELDS; end

      def validate
      end

      ::Thrift::Struct.generate_accessors self
    end

    class SceneGetValuesReturnStruct
      include ::Thrift::Struct, ::Thrift::Struct_Union
      RETVAL = 1
      O_VALUE = 2

      FIELDS = {
        RETVAL => {:type => ::Thrift::Types::I32, :name => 'retval'},
        O_VALUE => {:type => ::Thrift::Types::LIST, :name => 'o_value', :element => {:type => ::Thrift::Types::STRUCT, :class => OpenZWave::RemoteValueID}}
      }

      def struct_fields; FIELDS; end

      def validate
      end

      ::Thrift::Struct.generate_accessors self
    end

  end
