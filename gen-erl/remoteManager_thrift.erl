%%
%% Autogenerated by Thrift Compiler (0.7.0)
%%
%% DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
%%

-module(remoteManager_thrift).
-behaviour(thrift_service).


-include("remoteManager_thrift.hrl").

-export([struct_info/1, function_info/2]).

struct_info('i am a dummy struct') -> undefined.
%%% interface
% WriteConfig(This, _homeId)
function_info('WriteConfig', params_type) ->
  {struct, [{1, i32}]}
;
function_info('WriteConfig', reply_type) ->
  {struct, []};
function_info('WriteConfig', exceptions) ->
  {struct, []}
;
% GetControllerNodeId(This, _homeId)
function_info('GetControllerNodeId', params_type) ->
  {struct, [{1, i32}]}
;
function_info('GetControllerNodeId', reply_type) ->
  byte;
function_info('GetControllerNodeId', exceptions) ->
  {struct, []}
;
% IsPrimaryController(This, _homeId)
function_info('IsPrimaryController', params_type) ->
  {struct, [{1, i32}]}
;
function_info('IsPrimaryController', reply_type) ->
  bool;
function_info('IsPrimaryController', exceptions) ->
  {struct, []}
;
% IsStaticUpdateController(This, _homeId)
function_info('IsStaticUpdateController', params_type) ->
  {struct, [{1, i32}]}
;
function_info('IsStaticUpdateController', reply_type) ->
  bool;
function_info('IsStaticUpdateController', exceptions) ->
  {struct, []}
;
% IsBridgeController(This, _homeId)
function_info('IsBridgeController', params_type) ->
  {struct, [{1, i32}]}
;
function_info('IsBridgeController', reply_type) ->
  bool;
function_info('IsBridgeController', exceptions) ->
  {struct, []}
;
% GetLibraryVersion(This, _homeId)
function_info('GetLibraryVersion', params_type) ->
  {struct, [{1, i32}]}
;
function_info('GetLibraryVersion', reply_type) ->
  string;
function_info('GetLibraryVersion', exceptions) ->
  {struct, []}
;
% GetLibraryTypeName(This, _homeId)
function_info('GetLibraryTypeName', params_type) ->
  {struct, [{1, i32}]}
;
function_info('GetLibraryTypeName', reply_type) ->
  string;
function_info('GetLibraryTypeName', exceptions) ->
  {struct, []}
;
% GetSendQueueCount(This, _homeId)
function_info('GetSendQueueCount', params_type) ->
  {struct, [{1, i32}]}
;
function_info('GetSendQueueCount', reply_type) ->
  i32;
function_info('GetSendQueueCount', exceptions) ->
  {struct, []}
;
% LogDriverStatistics(This, _homeId)
function_info('LogDriverStatistics', params_type) ->
  {struct, [{1, i32}]}
;
function_info('LogDriverStatistics', reply_type) ->
  {struct, []};
function_info('LogDriverStatistics', exceptions) ->
  {struct, []}
;
% GetPollInterval(This)
function_info('GetPollInterval', params_type) ->
  {struct, []}
;
function_info('GetPollInterval', reply_type) ->
  i32;
function_info('GetPollInterval', exceptions) ->
  {struct, []}
;
% SetPollInterval(This, _milliseconds, _bIntervalBetweenPolls)
function_info('SetPollInterval', params_type) ->
  {struct, [{1, i32}, {2, bool}]}
;
function_info('SetPollInterval', reply_type) ->
  {struct, []};
function_info('SetPollInterval', exceptions) ->
  {struct, []}
;
% EnablePoll(This, _valueId, _intensity)
function_info('EnablePoll', params_type) ->
  {struct, [{1, {struct, {'ozw_types', 'remoteValueID'}}}, {2, byte}]}
;
function_info('EnablePoll', reply_type) ->
  bool;
function_info('EnablePoll', exceptions) ->
  {struct, []}
;
% DisablePoll(This, _valueId)
function_info('DisablePoll', params_type) ->
  {struct, [{1, {struct, {'ozw_types', 'remoteValueID'}}}]}
;
function_info('DisablePoll', reply_type) ->
  bool;
function_info('DisablePoll', exceptions) ->
  {struct, []}
;
% isPolled(This, _valueId)
function_info('isPolled', params_type) ->
  {struct, [{1, {struct, {'ozw_types', 'remoteValueID'}}}]}
;
function_info('isPolled', reply_type) ->
  bool;
function_info('isPolled', exceptions) ->
  {struct, []}
;
% SetPollIntensity(This, _valueId, _intensity)
function_info('SetPollIntensity', params_type) ->
  {struct, [{1, {struct, {'ozw_types', 'remoteValueID'}}}, {2, byte}]}
;
function_info('SetPollIntensity', reply_type) ->
  {struct, []};
function_info('SetPollIntensity', exceptions) ->
  {struct, []}
;
% RefreshNodeInfo(This, _homeId, _nodeId)
function_info('RefreshNodeInfo', params_type) ->
  {struct, [{1, i32}, {2, byte}]}
;
function_info('RefreshNodeInfo', reply_type) ->
  bool;
function_info('RefreshNodeInfo', exceptions) ->
  {struct, []}
;
% RequestNodeState(This, _homeId, _nodeId)
function_info('RequestNodeState', params_type) ->
  {struct, [{1, i32}, {2, byte}]}
;
function_info('RequestNodeState', reply_type) ->
  bool;
function_info('RequestNodeState', exceptions) ->
  {struct, []}
;
% RequestNodeDynamic(This, _homeId, _nodeId)
function_info('RequestNodeDynamic', params_type) ->
  {struct, [{1, i32}, {2, byte}]}
;
function_info('RequestNodeDynamic', reply_type) ->
  bool;
function_info('RequestNodeDynamic', exceptions) ->
  {struct, []}
;
% IsNodeListeningDevice(This, _homeId, _nodeId)
function_info('IsNodeListeningDevice', params_type) ->
  {struct, [{1, i32}, {2, byte}]}
;
function_info('IsNodeListeningDevice', reply_type) ->
  bool;
function_info('IsNodeListeningDevice', exceptions) ->
  {struct, []}
;
% IsNodeFrequentListeningDevice(This, _homeId, _nodeId)
function_info('IsNodeFrequentListeningDevice', params_type) ->
  {struct, [{1, i32}, {2, byte}]}
;
function_info('IsNodeFrequentListeningDevice', reply_type) ->
  bool;
function_info('IsNodeFrequentListeningDevice', exceptions) ->
  {struct, []}
;
% IsNodeBeamingDevice(This, _homeId, _nodeId)
function_info('IsNodeBeamingDevice', params_type) ->
  {struct, [{1, i32}, {2, byte}]}
;
function_info('IsNodeBeamingDevice', reply_type) ->
  bool;
function_info('IsNodeBeamingDevice', exceptions) ->
  {struct, []}
;
% IsNodeRoutingDevice(This, _homeId, _nodeId)
function_info('IsNodeRoutingDevice', params_type) ->
  {struct, [{1, i32}, {2, byte}]}
;
function_info('IsNodeRoutingDevice', reply_type) ->
  bool;
function_info('IsNodeRoutingDevice', exceptions) ->
  {struct, []}
;
% IsNodeSecurityDevice(This, _homeId, _nodeId)
function_info('IsNodeSecurityDevice', params_type) ->
  {struct, [{1, i32}, {2, byte}]}
;
function_info('IsNodeSecurityDevice', reply_type) ->
  bool;
function_info('IsNodeSecurityDevice', exceptions) ->
  {struct, []}
;
% GetNodeMaxBaudRate(This, _homeId, _nodeId)
function_info('GetNodeMaxBaudRate', params_type) ->
  {struct, [{1, i32}, {2, byte}]}
;
function_info('GetNodeMaxBaudRate', reply_type) ->
  i32;
function_info('GetNodeMaxBaudRate', exceptions) ->
  {struct, []}
;
% GetNodeVersion(This, _homeId, _nodeId)
function_info('GetNodeVersion', params_type) ->
  {struct, [{1, i32}, {2, byte}]}
;
function_info('GetNodeVersion', reply_type) ->
  byte;
function_info('GetNodeVersion', exceptions) ->
  {struct, []}
;
% GetNodeSecurity(This, _homeId, _nodeId)
function_info('GetNodeSecurity', params_type) ->
  {struct, [{1, i32}, {2, byte}]}
;
function_info('GetNodeSecurity', reply_type) ->
  byte;
function_info('GetNodeSecurity', exceptions) ->
  {struct, []}
;
% GetNodeBasic(This, _homeId, _nodeId)
function_info('GetNodeBasic', params_type) ->
  {struct, [{1, i32}, {2, byte}]}
;
function_info('GetNodeBasic', reply_type) ->
  byte;
function_info('GetNodeBasic', exceptions) ->
  {struct, []}
;
% GetNodeGeneric(This, _homeId, _nodeId)
function_info('GetNodeGeneric', params_type) ->
  {struct, [{1, i32}, {2, byte}]}
;
function_info('GetNodeGeneric', reply_type) ->
  byte;
function_info('GetNodeGeneric', exceptions) ->
  {struct, []}
;
% GetNodeSpecific(This, _homeId, _nodeId)
function_info('GetNodeSpecific', params_type) ->
  {struct, [{1, i32}, {2, byte}]}
;
function_info('GetNodeSpecific', reply_type) ->
  byte;
function_info('GetNodeSpecific', exceptions) ->
  {struct, []}
;
% GetNodeType(This, _homeId, _nodeId)
function_info('GetNodeType', params_type) ->
  {struct, [{1, i32}, {2, byte}]}
;
function_info('GetNodeType', reply_type) ->
  string;
function_info('GetNodeType', exceptions) ->
  {struct, []}
;
% GetNodeNeighbors(This, _homeId, _nodeId)
function_info('GetNodeNeighbors', params_type) ->
  {struct, [{1, i32}, {2, byte}]}
;
function_info('GetNodeNeighbors', reply_type) ->
  {struct, {'ozw_types', 'uInt32_ListByte'}};
function_info('GetNodeNeighbors', exceptions) ->
  {struct, []}
;
% GetNodeManufacturerName(This, _homeId, _nodeId)
function_info('GetNodeManufacturerName', params_type) ->
  {struct, [{1, i32}, {2, byte}]}
;
function_info('GetNodeManufacturerName', reply_type) ->
  string;
function_info('GetNodeManufacturerName', exceptions) ->
  {struct, []}
;
% GetNodeProductName(This, _homeId, _nodeId)
function_info('GetNodeProductName', params_type) ->
  {struct, [{1, i32}, {2, byte}]}
;
function_info('GetNodeProductName', reply_type) ->
  string;
function_info('GetNodeProductName', exceptions) ->
  {struct, []}
;
% GetNodeName(This, _homeId, _nodeId)
function_info('GetNodeName', params_type) ->
  {struct, [{1, i32}, {2, byte}]}
;
function_info('GetNodeName', reply_type) ->
  string;
function_info('GetNodeName', exceptions) ->
  {struct, []}
;
% GetNodeLocation(This, _homeId, _nodeId)
function_info('GetNodeLocation', params_type) ->
  {struct, [{1, i32}, {2, byte}]}
;
function_info('GetNodeLocation', reply_type) ->
  string;
function_info('GetNodeLocation', exceptions) ->
  {struct, []}
;
% GetNodeManufacturerId(This, _homeId, _nodeId)
function_info('GetNodeManufacturerId', params_type) ->
  {struct, [{1, i32}, {2, byte}]}
;
function_info('GetNodeManufacturerId', reply_type) ->
  string;
function_info('GetNodeManufacturerId', exceptions) ->
  {struct, []}
;
% GetNodeProductType(This, _homeId, _nodeId)
function_info('GetNodeProductType', params_type) ->
  {struct, [{1, i32}, {2, byte}]}
;
function_info('GetNodeProductType', reply_type) ->
  string;
function_info('GetNodeProductType', exceptions) ->
  {struct, []}
;
% GetNodeProductId(This, _homeId, _nodeId)
function_info('GetNodeProductId', params_type) ->
  {struct, [{1, i32}, {2, byte}]}
;
function_info('GetNodeProductId', reply_type) ->
  string;
function_info('GetNodeProductId', exceptions) ->
  {struct, []}
;
% SetNodeManufacturerName(This, _homeId, _nodeId, _manufacturerName)
function_info('SetNodeManufacturerName', params_type) ->
  {struct, [{1, i32}, {2, byte}, {3, string}]}
;
function_info('SetNodeManufacturerName', reply_type) ->
  {struct, []};
function_info('SetNodeManufacturerName', exceptions) ->
  {struct, []}
;
% SetNodeProductName(This, _homeId, _nodeId, _productName)
function_info('SetNodeProductName', params_type) ->
  {struct, [{1, i32}, {2, byte}, {3, string}]}
;
function_info('SetNodeProductName', reply_type) ->
  {struct, []};
function_info('SetNodeProductName', exceptions) ->
  {struct, []}
;
% SetNodeName(This, _homeId, _nodeId, _nodeName)
function_info('SetNodeName', params_type) ->
  {struct, [{1, i32}, {2, byte}, {3, string}]}
;
function_info('SetNodeName', reply_type) ->
  {struct, []};
function_info('SetNodeName', exceptions) ->
  {struct, []}
;
% SetNodeLocation(This, _homeId, _nodeId, _location)
function_info('SetNodeLocation', params_type) ->
  {struct, [{1, i32}, {2, byte}, {3, string}]}
;
function_info('SetNodeLocation', reply_type) ->
  {struct, []};
function_info('SetNodeLocation', exceptions) ->
  {struct, []}
;
% SetNodeOn(This, _homeId, _nodeId)
function_info('SetNodeOn', params_type) ->
  {struct, [{1, i32}, {2, byte}]}
;
function_info('SetNodeOn', reply_type) ->
  {struct, []};
function_info('SetNodeOn', exceptions) ->
  {struct, []}
;
% SetNodeOff(This, _homeId, _nodeId)
function_info('SetNodeOff', params_type) ->
  {struct, [{1, i32}, {2, byte}]}
;
function_info('SetNodeOff', reply_type) ->
  {struct, []};
function_info('SetNodeOff', exceptions) ->
  {struct, []}
;
% SetNodeLevel(This, _homeId, _nodeId, _level)
function_info('SetNodeLevel', params_type) ->
  {struct, [{1, i32}, {2, byte}, {3, byte}]}
;
function_info('SetNodeLevel', reply_type) ->
  {struct, []};
function_info('SetNodeLevel', exceptions) ->
  {struct, []}
;
% IsNodeInfoReceived(This, _homeId, _nodeId)
function_info('IsNodeInfoReceived', params_type) ->
  {struct, [{1, i32}, {2, byte}]}
;
function_info('IsNodeInfoReceived', reply_type) ->
  bool;
function_info('IsNodeInfoReceived', exceptions) ->
  {struct, []}
;
% GetNodeClassInformation(This, _homeId, _nodeId, _commandClassId)
function_info('GetNodeClassInformation', params_type) ->
  {struct, [{1, i32}, {2, byte}, {3, byte}]}
;
function_info('GetNodeClassInformation', reply_type) ->
  {struct, {'ozw_types', 'bool_GetNodeClassInformation'}};
function_info('GetNodeClassInformation', exceptions) ->
  {struct, []}
;
% GetValueLabel(This, _id)
function_info('GetValueLabel', params_type) ->
  {struct, [{1, {struct, {'ozw_types', 'remoteValueID'}}}]}
;
function_info('GetValueLabel', reply_type) ->
  string;
function_info('GetValueLabel', exceptions) ->
  {struct, []}
;
% SetValueLabel(This, _id, _value)
function_info('SetValueLabel', params_type) ->
  {struct, [{1, {struct, {'ozw_types', 'remoteValueID'}}}, {2, string}]}
;
function_info('SetValueLabel', reply_type) ->
  {struct, []};
function_info('SetValueLabel', exceptions) ->
  {struct, []}
;
% GetValueUnits(This, _id)
function_info('GetValueUnits', params_type) ->
  {struct, [{1, {struct, {'ozw_types', 'remoteValueID'}}}]}
;
function_info('GetValueUnits', reply_type) ->
  string;
function_info('GetValueUnits', exceptions) ->
  {struct, []}
;
% SetValueUnits(This, _id, _value)
function_info('SetValueUnits', params_type) ->
  {struct, [{1, {struct, {'ozw_types', 'remoteValueID'}}}, {2, string}]}
;
function_info('SetValueUnits', reply_type) ->
  {struct, []};
function_info('SetValueUnits', exceptions) ->
  {struct, []}
;
% GetValueHelp(This, _id)
function_info('GetValueHelp', params_type) ->
  {struct, [{1, {struct, {'ozw_types', 'remoteValueID'}}}]}
;
function_info('GetValueHelp', reply_type) ->
  string;
function_info('GetValueHelp', exceptions) ->
  {struct, []}
;
% SetValueHelp(This, _id, _value)
function_info('SetValueHelp', params_type) ->
  {struct, [{1, {struct, {'ozw_types', 'remoteValueID'}}}, {2, string}]}
;
function_info('SetValueHelp', reply_type) ->
  {struct, []};
function_info('SetValueHelp', exceptions) ->
  {struct, []}
;
% GetValueMin(This, _id)
function_info('GetValueMin', params_type) ->
  {struct, [{1, {struct, {'ozw_types', 'remoteValueID'}}}]}
;
function_info('GetValueMin', reply_type) ->
  i32;
function_info('GetValueMin', exceptions) ->
  {struct, []}
;
% GetValueMax(This, _id)
function_info('GetValueMax', params_type) ->
  {struct, [{1, {struct, {'ozw_types', 'remoteValueID'}}}]}
;
function_info('GetValueMax', reply_type) ->
  i32;
function_info('GetValueMax', exceptions) ->
  {struct, []}
;
% IsValueReadOnly(This, _id)
function_info('IsValueReadOnly', params_type) ->
  {struct, [{1, {struct, {'ozw_types', 'remoteValueID'}}}]}
;
function_info('IsValueReadOnly', reply_type) ->
  bool;
function_info('IsValueReadOnly', exceptions) ->
  {struct, []}
;
% IsValueWriteOnly(This, _id)
function_info('IsValueWriteOnly', params_type) ->
  {struct, [{1, {struct, {'ozw_types', 'remoteValueID'}}}]}
;
function_info('IsValueWriteOnly', reply_type) ->
  bool;
function_info('IsValueWriteOnly', exceptions) ->
  {struct, []}
;
% IsValueSet(This, _id)
function_info('IsValueSet', params_type) ->
  {struct, [{1, {struct, {'ozw_types', 'remoteValueID'}}}]}
;
function_info('IsValueSet', reply_type) ->
  bool;
function_info('IsValueSet', exceptions) ->
  {struct, []}
;
% IsValuePolled(This, _id)
function_info('IsValuePolled', params_type) ->
  {struct, [{1, {struct, {'ozw_types', 'remoteValueID'}}}]}
;
function_info('IsValuePolled', reply_type) ->
  bool;
function_info('IsValuePolled', exceptions) ->
  {struct, []}
;
% GetValueAsBool(This, _id)
function_info('GetValueAsBool', params_type) ->
  {struct, [{1, {struct, {'ozw_types', 'remoteValueID'}}}]}
;
function_info('GetValueAsBool', reply_type) ->
  {struct, {'ozw_types', 'bool_Bool'}};
function_info('GetValueAsBool', exceptions) ->
  {struct, []}
;
% GetValueAsByte(This, _id)
function_info('GetValueAsByte', params_type) ->
  {struct, [{1, {struct, {'ozw_types', 'remoteValueID'}}}]}
;
function_info('GetValueAsByte', reply_type) ->
  {struct, {'ozw_types', 'bool_UInt8'}};
function_info('GetValueAsByte', exceptions) ->
  {struct, []}
;
% GetValueAsFloat(This, _id)
function_info('GetValueAsFloat', params_type) ->
  {struct, [{1, {struct, {'ozw_types', 'remoteValueID'}}}]}
;
function_info('GetValueAsFloat', reply_type) ->
  {struct, {'ozw_types', 'bool_Float'}};
function_info('GetValueAsFloat', exceptions) ->
  {struct, []}
;
% GetValueAsInt(This, _id)
function_info('GetValueAsInt', params_type) ->
  {struct, [{1, {struct, {'ozw_types', 'remoteValueID'}}}]}
;
function_info('GetValueAsInt', reply_type) ->
  {struct, {'ozw_types', 'bool_Int'}};
function_info('GetValueAsInt', exceptions) ->
  {struct, []}
;
% GetValueAsShort(This, _id)
function_info('GetValueAsShort', params_type) ->
  {struct, [{1, {struct, {'ozw_types', 'remoteValueID'}}}]}
;
function_info('GetValueAsShort', reply_type) ->
  {struct, {'ozw_types', 'bool_Int16'}};
function_info('GetValueAsShort', exceptions) ->
  {struct, []}
;
% GetValueAsString(This, _id)
function_info('GetValueAsString', params_type) ->
  {struct, [{1, {struct, {'ozw_types', 'remoteValueID'}}}]}
;
function_info('GetValueAsString', reply_type) ->
  {struct, {'ozw_types', 'bool_String'}};
function_info('GetValueAsString', exceptions) ->
  {struct, []}
;
% GetValueListSelection_String(This, _id)
function_info('GetValueListSelection_String', params_type) ->
  {struct, [{1, {struct, {'ozw_types', 'remoteValueID'}}}]}
;
function_info('GetValueListSelection_String', reply_type) ->
  {struct, {'ozw_types', 'bool_String'}};
function_info('GetValueListSelection_String', exceptions) ->
  {struct, []}
;
% GetValueListSelection_Int32(This, _id)
function_info('GetValueListSelection_Int32', params_type) ->
  {struct, [{1, {struct, {'ozw_types', 'remoteValueID'}}}]}
;
function_info('GetValueListSelection_Int32', reply_type) ->
  {struct, {'ozw_types', 'bool_Int'}};
function_info('GetValueListSelection_Int32', exceptions) ->
  {struct, []}
;
% GetValueListItems(This, _id)
function_info('GetValueListItems', params_type) ->
  {struct, [{1, {struct, {'ozw_types', 'remoteValueID'}}}]}
;
function_info('GetValueListItems', reply_type) ->
  {struct, {'ozw_types', 'bool_ListString'}};
function_info('GetValueListItems', exceptions) ->
  {struct, []}
;
% GetValueFloatPrecision(This, _id)
function_info('GetValueFloatPrecision', params_type) ->
  {struct, [{1, {struct, {'ozw_types', 'remoteValueID'}}}]}
;
function_info('GetValueFloatPrecision', reply_type) ->
  {struct, {'ozw_types', 'bool_UInt8'}};
function_info('GetValueFloatPrecision', exceptions) ->
  {struct, []}
;
% SetValue_Bool(This, _id, _value)
function_info('SetValue_Bool', params_type) ->
  {struct, [{1, {struct, {'ozw_types', 'remoteValueID'}}}, {2, bool}]}
;
function_info('SetValue_Bool', reply_type) ->
  bool;
function_info('SetValue_Bool', exceptions) ->
  {struct, []}
;
% SetValue_UInt8(This, _id, _value)
function_info('SetValue_UInt8', params_type) ->
  {struct, [{1, {struct, {'ozw_types', 'remoteValueID'}}}, {2, byte}]}
;
function_info('SetValue_UInt8', reply_type) ->
  bool;
function_info('SetValue_UInt8', exceptions) ->
  {struct, []}
;
% SetValue_Float(This, _id, _value)
function_info('SetValue_Float', params_type) ->
  {struct, [{1, {struct, {'ozw_types', 'remoteValueID'}}}, {2, double}]}
;
function_info('SetValue_Float', reply_type) ->
  bool;
function_info('SetValue_Float', exceptions) ->
  {struct, []}
;
% SetValue_Int32(This, _id, _value)
function_info('SetValue_Int32', params_type) ->
  {struct, [{1, {struct, {'ozw_types', 'remoteValueID'}}}, {2, i32}]}
;
function_info('SetValue_Int32', reply_type) ->
  bool;
function_info('SetValue_Int32', exceptions) ->
  {struct, []}
;
% SetValue_Int16(This, _id, _value)
function_info('SetValue_Int16', params_type) ->
  {struct, [{1, {struct, {'ozw_types', 'remoteValueID'}}}, {2, i16}]}
;
function_info('SetValue_Int16', reply_type) ->
  bool;
function_info('SetValue_Int16', exceptions) ->
  {struct, []}
;
% SetValue_String(This, _id, _value)
function_info('SetValue_String', params_type) ->
  {struct, [{1, {struct, {'ozw_types', 'remoteValueID'}}}, {2, string}]}
;
function_info('SetValue_String', reply_type) ->
  bool;
function_info('SetValue_String', exceptions) ->
  {struct, []}
;
% SetValueListSelection(This, _id, _selectedItem)
function_info('SetValueListSelection', params_type) ->
  {struct, [{1, {struct, {'ozw_types', 'remoteValueID'}}}, {2, string}]}
;
function_info('SetValueListSelection', reply_type) ->
  bool;
function_info('SetValueListSelection', exceptions) ->
  {struct, []}
;
% RefreshValue(This, _id)
function_info('RefreshValue', params_type) ->
  {struct, [{1, {struct, {'ozw_types', 'remoteValueID'}}}]}
;
function_info('RefreshValue', reply_type) ->
  bool;
function_info('RefreshValue', exceptions) ->
  {struct, []}
;
% PressButton(This, _id)
function_info('PressButton', params_type) ->
  {struct, [{1, {struct, {'ozw_types', 'remoteValueID'}}}]}
;
function_info('PressButton', reply_type) ->
  bool;
function_info('PressButton', exceptions) ->
  {struct, []}
;
% ReleaseButton(This, _id)
function_info('ReleaseButton', params_type) ->
  {struct, [{1, {struct, {'ozw_types', 'remoteValueID'}}}]}
;
function_info('ReleaseButton', reply_type) ->
  bool;
function_info('ReleaseButton', exceptions) ->
  {struct, []}
;
% GetNumSwitchPoints(This, _id)
function_info('GetNumSwitchPoints', params_type) ->
  {struct, [{1, {struct, {'ozw_types', 'remoteValueID'}}}]}
;
function_info('GetNumSwitchPoints', reply_type) ->
  byte;
function_info('GetNumSwitchPoints', exceptions) ->
  {struct, []}
;
% SetSwitchPoint(This, _id, _hours, _minutes, _setback)
function_info('SetSwitchPoint', params_type) ->
  {struct, [{1, {struct, {'ozw_types', 'remoteValueID'}}}, {2, byte}, {3, byte}, {4, byte}]}
;
function_info('SetSwitchPoint', reply_type) ->
  bool;
function_info('SetSwitchPoint', exceptions) ->
  {struct, []}
;
% RemoveSwitchPoint(This, _id, _hours, _minutes)
function_info('RemoveSwitchPoint', params_type) ->
  {struct, [{1, {struct, {'ozw_types', 'remoteValueID'}}}, {2, byte}, {3, byte}]}
;
function_info('RemoveSwitchPoint', reply_type) ->
  bool;
function_info('RemoveSwitchPoint', exceptions) ->
  {struct, []}
;
% ClearSwitchPoints(This, _id)
function_info('ClearSwitchPoints', params_type) ->
  {struct, [{1, {struct, {'ozw_types', 'remoteValueID'}}}]}
;
function_info('ClearSwitchPoints', reply_type) ->
  {struct, []};
function_info('ClearSwitchPoints', exceptions) ->
  {struct, []}
;
% GetSwitchPoint(This, _id, _idx)
function_info('GetSwitchPoint', params_type) ->
  {struct, [{1, {struct, {'ozw_types', 'remoteValueID'}}}, {2, byte}]}
;
function_info('GetSwitchPoint', reply_type) ->
  {struct, {'ozw_types', 'getSwitchPointReturnStruct'}};
function_info('GetSwitchPoint', exceptions) ->
  {struct, []}
;
% SwitchAllOn(This, _homeId)
function_info('SwitchAllOn', params_type) ->
  {struct, [{1, i32}]}
;
function_info('SwitchAllOn', reply_type) ->
  {struct, []};
function_info('SwitchAllOn', exceptions) ->
  {struct, []}
;
% SwitchAllOff(This, _homeId)
function_info('SwitchAllOff', params_type) ->
  {struct, [{1, i32}]}
;
function_info('SwitchAllOff', reply_type) ->
  {struct, []};
function_info('SwitchAllOff', exceptions) ->
  {struct, []}
;
% SetConfigParam(This, _homeId, _nodeId, _param, _value, _size)
function_info('SetConfigParam', params_type) ->
  {struct, [{1, i32}, {2, byte}, {3, byte}, {4, i32}, {5, byte}]}
;
function_info('SetConfigParam', reply_type) ->
  bool;
function_info('SetConfigParam', exceptions) ->
  {struct, []}
;
% RequestConfigParam(This, _homeId, _nodeId, _param)
function_info('RequestConfigParam', params_type) ->
  {struct, [{1, i32}, {2, byte}, {3, byte}]}
;
function_info('RequestConfigParam', reply_type) ->
  {struct, []};
function_info('RequestConfigParam', exceptions) ->
  {struct, []}
;
% RequestAllConfigParams(This, _homeId, _nodeId)
function_info('RequestAllConfigParams', params_type) ->
  {struct, [{1, i32}, {2, byte}]}
;
function_info('RequestAllConfigParams', reply_type) ->
  {struct, []};
function_info('RequestAllConfigParams', exceptions) ->
  {struct, []}
;
% GetNumGroups(This, _homeId, _nodeId)
function_info('GetNumGroups', params_type) ->
  {struct, [{1, i32}, {2, byte}]}
;
function_info('GetNumGroups', reply_type) ->
  byte;
function_info('GetNumGroups', exceptions) ->
  {struct, []}
;
% GetAssociations(This, _homeId, _nodeId, _groupIdx)
function_info('GetAssociations', params_type) ->
  {struct, [{1, i32}, {2, byte}, {3, byte}]}
;
function_info('GetAssociations', reply_type) ->
  {struct, {'ozw_types', 'getAssociationsReturnStruct'}};
function_info('GetAssociations', exceptions) ->
  {struct, []}
;
% GetMaxAssociations(This, _homeId, _nodeId, _groupIdx)
function_info('GetMaxAssociations', params_type) ->
  {struct, [{1, i32}, {2, byte}, {3, byte}]}
;
function_info('GetMaxAssociations', reply_type) ->
  byte;
function_info('GetMaxAssociations', exceptions) ->
  {struct, []}
;
% GetGroupLabel(This, _homeId, _nodeId, _groupIdx)
function_info('GetGroupLabel', params_type) ->
  {struct, [{1, i32}, {2, byte}, {3, byte}]}
;
function_info('GetGroupLabel', reply_type) ->
  string;
function_info('GetGroupLabel', exceptions) ->
  {struct, []}
;
% AddAssociation(This, _homeId, _nodeId, _groupIdx, _targetNodeId)
function_info('AddAssociation', params_type) ->
  {struct, [{1, i32}, {2, byte}, {3, byte}, {4, byte}]}
;
function_info('AddAssociation', reply_type) ->
  {struct, []};
function_info('AddAssociation', exceptions) ->
  {struct, []}
;
% RemoveAssociation(This, _homeId, _nodeId, _groupIdx, _targetNodeId)
function_info('RemoveAssociation', params_type) ->
  {struct, [{1, i32}, {2, byte}, {3, byte}, {4, byte}]}
;
function_info('RemoveAssociation', reply_type) ->
  {struct, []};
function_info('RemoveAssociation', exceptions) ->
  {struct, []}
;
% ResetController(This, _homeId)
function_info('ResetController', params_type) ->
  {struct, [{1, i32}]}
;
function_info('ResetController', reply_type) ->
  {struct, []};
function_info('ResetController', exceptions) ->
  {struct, []}
;
% SoftReset(This, _homeId)
function_info('SoftReset', params_type) ->
  {struct, [{1, i32}]}
;
function_info('SoftReset', reply_type) ->
  {struct, []};
function_info('SoftReset', exceptions) ->
  {struct, []}
;
% BeginControllerCommand(This, _homeId, _command, _highPower, _nodeId, _arg)
function_info('BeginControllerCommand', params_type) ->
  {struct, [{1, i32}, {2, i32}, {3, bool}, {4, byte}, {5, byte}]}
;
function_info('BeginControllerCommand', reply_type) ->
  bool;
function_info('BeginControllerCommand', exceptions) ->
  {struct, []}
;
% CancelControllerCommand(This, _homeId)
function_info('CancelControllerCommand', params_type) ->
  {struct, [{1, i32}]}
;
function_info('CancelControllerCommand', reply_type) ->
  bool;
function_info('CancelControllerCommand', exceptions) ->
  {struct, []}
;
% GetNumScenes(This)
function_info('GetNumScenes', params_type) ->
  {struct, []}
;
function_info('GetNumScenes', reply_type) ->
  byte;
function_info('GetNumScenes', exceptions) ->
  {struct, []}
;
% GetAllScenes(This)
function_info('GetAllScenes', params_type) ->
  {struct, []}
;
function_info('GetAllScenes', reply_type) ->
  {struct, {'ozw_types', 'getAllScenesReturnStruct'}};
function_info('GetAllScenes', exceptions) ->
  {struct, []}
;
% CreateScene(This)
function_info('CreateScene', params_type) ->
  {struct, []}
;
function_info('CreateScene', reply_type) ->
  byte;
function_info('CreateScene', exceptions) ->
  {struct, []}
;
% RemoveScene(This, _sceneId)
function_info('RemoveScene', params_type) ->
  {struct, [{1, byte}]}
;
function_info('RemoveScene', reply_type) ->
  bool;
function_info('RemoveScene', exceptions) ->
  {struct, []}
;
% AddSceneValue_Bool(This, _sceneId, _valueId, _value)
function_info('AddSceneValue_Bool', params_type) ->
  {struct, [{1, byte}, {2, {struct, {'ozw_types', 'remoteValueID'}}}, {3, bool}]}
;
function_info('AddSceneValue_Bool', reply_type) ->
  bool;
function_info('AddSceneValue_Bool', exceptions) ->
  {struct, []}
;
% AddSceneValue_Uint8(This, _sceneId, _valueId, _value)
function_info('AddSceneValue_Uint8', params_type) ->
  {struct, [{1, byte}, {2, {struct, {'ozw_types', 'remoteValueID'}}}, {3, byte}]}
;
function_info('AddSceneValue_Uint8', reply_type) ->
  bool;
function_info('AddSceneValue_Uint8', exceptions) ->
  {struct, []}
;
% AddSceneValue_Float(This, _sceneId, _valueId, _value)
function_info('AddSceneValue_Float', params_type) ->
  {struct, [{1, byte}, {2, {struct, {'ozw_types', 'remoteValueID'}}}, {3, double}]}
;
function_info('AddSceneValue_Float', reply_type) ->
  bool;
function_info('AddSceneValue_Float', exceptions) ->
  {struct, []}
;
% AddSceneValue_Int32(This, _sceneId, _valueId, _value)
function_info('AddSceneValue_Int32', params_type) ->
  {struct, [{1, byte}, {2, {struct, {'ozw_types', 'remoteValueID'}}}, {3, i32}]}
;
function_info('AddSceneValue_Int32', reply_type) ->
  bool;
function_info('AddSceneValue_Int32', exceptions) ->
  {struct, []}
;
% AddSceneValue_Int16(This, _sceneId, _valueId, _value)
function_info('AddSceneValue_Int16', params_type) ->
  {struct, [{1, byte}, {2, {struct, {'ozw_types', 'remoteValueID'}}}, {3, i16}]}
;
function_info('AddSceneValue_Int16', reply_type) ->
  bool;
function_info('AddSceneValue_Int16', exceptions) ->
  {struct, []}
;
% AddSceneValue_String(This, _sceneId, _valueId, _value)
function_info('AddSceneValue_String', params_type) ->
  {struct, [{1, byte}, {2, {struct, {'ozw_types', 'remoteValueID'}}}, {3, string}]}
;
function_info('AddSceneValue_String', reply_type) ->
  bool;
function_info('AddSceneValue_String', exceptions) ->
  {struct, []}
;
% AddSceneValueListSelection_String(This, _sceneId, _valueId, _value)
function_info('AddSceneValueListSelection_String', params_type) ->
  {struct, [{1, byte}, {2, {struct, {'ozw_types', 'remoteValueID'}}}, {3, string}]}
;
function_info('AddSceneValueListSelection_String', reply_type) ->
  bool;
function_info('AddSceneValueListSelection_String', exceptions) ->
  {struct, []}
;
% AddSceneValueListSelection_Int32(This, _sceneId, _valueId, _value)
function_info('AddSceneValueListSelection_Int32', params_type) ->
  {struct, [{1, byte}, {2, {struct, {'ozw_types', 'remoteValueID'}}}, {3, i32}]}
;
function_info('AddSceneValueListSelection_Int32', reply_type) ->
  bool;
function_info('AddSceneValueListSelection_Int32', exceptions) ->
  {struct, []}
;
% RemoveSceneValue(This, _sceneId, _valueId)
function_info('RemoveSceneValue', params_type) ->
  {struct, [{1, byte}, {2, {struct, {'ozw_types', 'remoteValueID'}}}]}
;
function_info('RemoveSceneValue', reply_type) ->
  bool;
function_info('RemoveSceneValue', exceptions) ->
  {struct, []}
;
% SceneGetValues(This, _sceneId)
function_info('SceneGetValues', params_type) ->
  {struct, [{1, byte}]}
;
function_info('SceneGetValues', reply_type) ->
  {struct, {'ozw_types', 'sceneGetValuesReturnStruct'}};
function_info('SceneGetValues', exceptions) ->
  {struct, []}
;
% SceneGetValueAsBool(This, _sceneId, _valueId)
function_info('SceneGetValueAsBool', params_type) ->
  {struct, [{1, byte}, {2, {struct, {'ozw_types', 'remoteValueID'}}}]}
;
function_info('SceneGetValueAsBool', reply_type) ->
  {struct, {'ozw_types', 'bool_Bool'}};
function_info('SceneGetValueAsBool', exceptions) ->
  {struct, []}
;
% SceneGetValueAsByte(This, _sceneId, _valueId)
function_info('SceneGetValueAsByte', params_type) ->
  {struct, [{1, byte}, {2, {struct, {'ozw_types', 'remoteValueID'}}}]}
;
function_info('SceneGetValueAsByte', reply_type) ->
  {struct, {'ozw_types', 'bool_UInt8'}};
function_info('SceneGetValueAsByte', exceptions) ->
  {struct, []}
;
% SceneGetValueAsFloat(This, _sceneId, _valueId)
function_info('SceneGetValueAsFloat', params_type) ->
  {struct, [{1, byte}, {2, {struct, {'ozw_types', 'remoteValueID'}}}]}
;
function_info('SceneGetValueAsFloat', reply_type) ->
  {struct, {'ozw_types', 'bool_Float'}};
function_info('SceneGetValueAsFloat', exceptions) ->
  {struct, []}
;
% SceneGetValueAsInt(This, _sceneId, _valueId)
function_info('SceneGetValueAsInt', params_type) ->
  {struct, [{1, byte}, {2, {struct, {'ozw_types', 'remoteValueID'}}}]}
;
function_info('SceneGetValueAsInt', reply_type) ->
  {struct, {'ozw_types', 'bool_Int'}};
function_info('SceneGetValueAsInt', exceptions) ->
  {struct, []}
;
% SceneGetValueAsShort(This, _sceneId, _valueId)
function_info('SceneGetValueAsShort', params_type) ->
  {struct, [{1, byte}, {2, {struct, {'ozw_types', 'remoteValueID'}}}]}
;
function_info('SceneGetValueAsShort', reply_type) ->
  {struct, {'ozw_types', 'bool_Int16'}};
function_info('SceneGetValueAsShort', exceptions) ->
  {struct, []}
;
% SceneGetValueAsString(This, _sceneId, _valueId)
function_info('SceneGetValueAsString', params_type) ->
  {struct, [{1, byte}, {2, {struct, {'ozw_types', 'remoteValueID'}}}]}
;
function_info('SceneGetValueAsString', reply_type) ->
  {struct, {'ozw_types', 'bool_String'}};
function_info('SceneGetValueAsString', exceptions) ->
  {struct, []}
;
% SceneGetValueListSelection_String(This, _sceneId, _valueId)
function_info('SceneGetValueListSelection_String', params_type) ->
  {struct, [{1, byte}, {2, {struct, {'ozw_types', 'remoteValueID'}}}]}
;
function_info('SceneGetValueListSelection_String', reply_type) ->
  {struct, {'ozw_types', 'bool_String'}};
function_info('SceneGetValueListSelection_String', exceptions) ->
  {struct, []}
;
% SceneGetValueListSelection_Int32(This, _sceneId, _valueId)
function_info('SceneGetValueListSelection_Int32', params_type) ->
  {struct, [{1, byte}, {2, {struct, {'ozw_types', 'remoteValueID'}}}]}
;
function_info('SceneGetValueListSelection_Int32', reply_type) ->
  {struct, {'ozw_types', 'bool_Int'}};
function_info('SceneGetValueListSelection_Int32', exceptions) ->
  {struct, []}
;
% SetSceneValue_Bool(This, _sceneId, _valueId, _value)
function_info('SetSceneValue_Bool', params_type) ->
  {struct, [{1, byte}, {2, {struct, {'ozw_types', 'remoteValueID'}}}, {3, bool}]}
;
function_info('SetSceneValue_Bool', reply_type) ->
  bool;
function_info('SetSceneValue_Bool', exceptions) ->
  {struct, []}
;
% SetSceneValue_Uint8(This, _sceneId, _valueId, _value)
function_info('SetSceneValue_Uint8', params_type) ->
  {struct, [{1, byte}, {2, {struct, {'ozw_types', 'remoteValueID'}}}, {3, byte}]}
;
function_info('SetSceneValue_Uint8', reply_type) ->
  bool;
function_info('SetSceneValue_Uint8', exceptions) ->
  {struct, []}
;
% SetSceneValue_Float(This, _sceneId, _valueId, _value)
function_info('SetSceneValue_Float', params_type) ->
  {struct, [{1, byte}, {2, {struct, {'ozw_types', 'remoteValueID'}}}, {3, double}]}
;
function_info('SetSceneValue_Float', reply_type) ->
  bool;
function_info('SetSceneValue_Float', exceptions) ->
  {struct, []}
;
% SetSceneValue_Int32(This, _sceneId, _valueId, _value)
function_info('SetSceneValue_Int32', params_type) ->
  {struct, [{1, byte}, {2, {struct, {'ozw_types', 'remoteValueID'}}}, {3, i32}]}
;
function_info('SetSceneValue_Int32', reply_type) ->
  bool;
function_info('SetSceneValue_Int32', exceptions) ->
  {struct, []}
;
% SetSceneValue_Int16(This, _sceneId, _valueId, _value)
function_info('SetSceneValue_Int16', params_type) ->
  {struct, [{1, byte}, {2, {struct, {'ozw_types', 'remoteValueID'}}}, {3, i16}]}
;
function_info('SetSceneValue_Int16', reply_type) ->
  bool;
function_info('SetSceneValue_Int16', exceptions) ->
  {struct, []}
;
% SetSceneValue_String(This, _sceneId, _valueId, _value)
function_info('SetSceneValue_String', params_type) ->
  {struct, [{1, byte}, {2, {struct, {'ozw_types', 'remoteValueID'}}}, {3, string}]}
;
function_info('SetSceneValue_String', reply_type) ->
  bool;
function_info('SetSceneValue_String', exceptions) ->
  {struct, []}
;
% SetSceneValueListSelection_String(This, _sceneId, _valueId, _value)
function_info('SetSceneValueListSelection_String', params_type) ->
  {struct, [{1, byte}, {2, {struct, {'ozw_types', 'remoteValueID'}}}, {3, string}]}
;
function_info('SetSceneValueListSelection_String', reply_type) ->
  bool;
function_info('SetSceneValueListSelection_String', exceptions) ->
  {struct, []}
;
% SetSceneValueListSelection_Int32(This, _sceneId, _valueId, _value)
function_info('SetSceneValueListSelection_Int32', params_type) ->
  {struct, [{1, byte}, {2, {struct, {'ozw_types', 'remoteValueID'}}}, {3, i32}]}
;
function_info('SetSceneValueListSelection_Int32', reply_type) ->
  bool;
function_info('SetSceneValueListSelection_Int32', exceptions) ->
  {struct, []}
;
% GetSceneLabel(This, _sceneId)
function_info('GetSceneLabel', params_type) ->
  {struct, [{1, byte}]}
;
function_info('GetSceneLabel', reply_type) ->
  string;
function_info('GetSceneLabel', exceptions) ->
  {struct, []}
;
% SetSceneLabel(This, _sceneId, _value)
function_info('SetSceneLabel', params_type) ->
  {struct, [{1, byte}, {2, string}]}
;
function_info('SetSceneLabel', reply_type) ->
  {struct, []};
function_info('SetSceneLabel', exceptions) ->
  {struct, []}
;
% SceneExists(This, _sceneId)
function_info('SceneExists', params_type) ->
  {struct, [{1, byte}]}
;
function_info('SceneExists', reply_type) ->
  bool;
function_info('SceneExists', exceptions) ->
  {struct, []}
;
% ActivateScene(This, _sceneId)
function_info('ActivateScene', params_type) ->
  {struct, [{1, byte}]}
;
function_info('ActivateScene', reply_type) ->
  bool;
function_info('ActivateScene', exceptions) ->
  {struct, []}
;
% GetDriverStatistics(This, _homeId)
function_info('GetDriverStatistics', params_type) ->
  {struct, [{1, i32}]}
;
function_info('GetDriverStatistics', reply_type) ->
  {struct, {'ozw_types', 'getDriverStatisticsReturnStruct'}};
function_info('GetDriverStatistics', exceptions) ->
  {struct, []}
;
% SendAllValues(This)
function_info('SendAllValues', params_type) ->
  {struct, []}
;
function_info('SendAllValues', reply_type) ->
  {struct, []};
function_info('SendAllValues', exceptions) ->
  {struct, []}
;
function_info(_Func, _Info) -> no_function.

