*** gen-cpp/ozw_types.h.orig	2013-03-09 21:01:54.109456666 +0200
--- gen-cpp/ozw_types.h.patched	2012-04-16 12:25:34.615507390 +0300
***************
*** 1,5 ****
  /**
!  * Autogenerated by Thrift Compiler (1.0.0-dev)
   *
   * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
   *  @generated
--- 1,5 ----
  /**
!  * Autogenerated by Thrift Compiler (0.9.0-dev)
   *
   * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
   *  @generated
***************
*** 7,14 ****
  #ifndef ozw_TYPES_H
  #define ozw_TYPES_H
  
- #include <cstddef>
  using std::size_t;
  #include <thrift/Thrift.h>
  #include <thrift/TApplicationException.h>
  #include <thrift/protocol/TProtocol.h>
--- 7,14 ----
  #ifndef ozw_TYPES_H
  #define ozw_TYPES_H
  
  using std::size_t;
+ 
  #include <thrift/Thrift.h>
  #include <thrift/TApplicationException.h>
  #include <thrift/protocol/TProtocol.h>
***************
*** 44,50 ****
      ValueType_Schedule = 5,
      ValueType_Short = 6,
      ValueType_String = 7,
!     ValueType_Button = 8
    };
  };
  
--- 44,51 ----
      ValueType_Schedule = 5,
      ValueType_Short = 6,
      ValueType_String = 7,
!     ValueType_Button = 8,
!     ValueType_Max = 8
    };
  };
  
***************
*** 53,72 ****
  struct DriverControllerCommand {
    enum type {
      ControllerCommand_None = 0,
!     ControllerCommand_AddDevice = 1,
!     ControllerCommand_CreateNewPrimary = 2,
!     ControllerCommand_ReceiveConfiguration = 3,
!     ControllerCommand_RemoveDevice = 4,
!     ControllerCommand_RemoveFailedNode = 5,
!     ControllerCommand_HasNodeFailed = 6,
!     ControllerCommand_ReplaceFailedNode = 7,
!     ControllerCommand_TransferPrimaryRole = 8,
!     ControllerCommand_RequestNetworkUpdate = 9,
!     ControllerCommand_RequestNodeNeighborUpdate = 10,
!     ControllerCommand_AssignReturnRoute = 11,
!     ControllerCommand_DeleteAllReturnRoutes = 12,
!     ControllerCommand_SendNodeInformation = 13,
!     ControllerCommand_ReplicationSend = 14,
      ControllerCommand_CreateButton = 15,
      ControllerCommand_DeleteButton = 16
    };
--- 54,73 ----
  struct DriverControllerCommand {
    enum type {
      ControllerCommand_None = 0,
!     ControllerCommand_AddController = 1,
!     ControllerCommand_AddDevice = 2,
!     ControllerCommand_CreateNewPrimary = 3,
!     ControllerCommand_ReceiveConfiguration = 4,
!     ControllerCommand_RemoveController = 5,
!     ControllerCommand_RemoveDevice = 6,
!     ControllerCommand_RemoveFailedNode = 7,
!     ControllerCommand_HasNodeFailed = 8,
!     ControllerCommand_ReplaceFailedNode = 9,
!     ControllerCommand_TransferPrimaryRole = 10,
!     ControllerCommand_RequestNetworkUpdate = 11,
!     ControllerCommand_RequestNodeNeighborUpdate = 12,
!     ControllerCommand_AssignReturnRoute = 13,
!     ControllerCommand_DeleteAllReturnRoutes = 14,
      ControllerCommand_CreateButton = 15,
      ControllerCommand_DeleteButton = 16
    };
***************
*** 74,127 ****
  
  extern const std::map<int, const char*> _DriverControllerCommand_VALUES_TO_NAMES;
  
- struct DriverControllerState {
-   enum type {
-     ControllerState_Normal = 0,
-     ControllerState_Starting = 1,
-     ControllerState_Cancel = 2,
-     ControllerState_Error = 3,
-     ControllerState_Waiting = 4,
-     ControllerState_Sleeping = 5,
-     ControllerState_InProgress = 6,
-     ControllerState_Completed = 7,
-     ControllerState_Failed = 8,
-     ControllerState_NodeOK = 9,
-     ControllerState_NodeFailed = 10
-   };
- };
- 
- extern const std::map<int, const char*> _DriverControllerState_VALUES_TO_NAMES;
- 
- struct DriverControllerError {
-   enum type {
-     ControllerError_None = 0,
-     ControllerError_ButtonNotFound = 1,
-     ControllerError_NodeNotFound = 2,
-     ControllerError_NotBridge = 3,
-     ControllerError_NotSUC = 4,
-     ControllerError_NotSecondary = 5,
-     ControllerError_NotPrimary = 6,
-     ControllerError_IsPrimary = 7,
-     ControllerError_NotFound = 8,
-     ControllerError_Busy = 9,
-     ControllerError_Failed = 10,
-     ControllerError_Disabled = 11,
-     ControllerError_Overflow = 12
-   };
- };
- 
- extern const std::map<int, const char*> _DriverControllerError_VALUES_TO_NAMES;
- 
- struct DriverControllerInterface {
-   enum type {
-     ControllerInterface_Unknown = 0,
-     ControllerInterface_Serial = 1,
-     ControllerInterface_Hid = 2
-   };
- };
- 
- extern const std::map<int, const char*> _DriverControllerInterface_VALUES_TO_NAMES;
- 
  typedef struct _RemoteValueID__isset {
    _RemoteValueID__isset() : _homeId(false), _nodeId(false), _genre(false), _commandClassId(false), _instance(false), _valueIndex(false), _type(false) {}
    bool _homeId;
--- 75,80 ----
***************
*** 419,665 ****
  
  void swap(GetDriverStatisticsReturnStruct &a, GetDriverStatisticsReturnStruct &b);
  
- typedef struct _CommandClassData__isset {
-   _CommandClassData__isset() : m_commandClassId(false), m_sentCnt(false), m_receivedCnt(false) {}
-   bool m_commandClassId;
-   bool m_sentCnt;
-   bool m_receivedCnt;
- } _CommandClassData__isset;
- 
- class CommandClassData {
-  public:
- 
-   static const char* ascii_fingerprint; // = "6991D02F78C92CCC3C9DC65E1F8719EF";
-   static const uint8_t binary_fingerprint[16]; // = {0x69,0x91,0xD0,0x2F,0x78,0xC9,0x2C,0xCC,0x3C,0x9D,0xC6,0x5E,0x1F,0x87,0x19,0xEF};
- 
-   CommandClassData() : m_commandClassId(0), m_sentCnt(0), m_receivedCnt(0) {
-   }
- 
-   virtual ~CommandClassData() throw() {}
- 
-   int8_t m_commandClassId;
-   int32_t m_sentCnt;
-   int32_t m_receivedCnt;
- 
-   _CommandClassData__isset __isset;
- 
-   void __set_m_commandClassId(const int8_t val) {
-     m_commandClassId = val;
-   }
- 
-   void __set_m_sentCnt(const int32_t val) {
-     m_sentCnt = val;
-   }
- 
-   void __set_m_receivedCnt(const int32_t val) {
-     m_receivedCnt = val;
-   }
- 
-   bool operator == (const CommandClassData & rhs) const
-   {
-     if (!(m_commandClassId == rhs.m_commandClassId))
-       return false;
-     if (!(m_sentCnt == rhs.m_sentCnt))
-       return false;
-     if (!(m_receivedCnt == rhs.m_receivedCnt))
-       return false;
-     return true;
-   }
-   bool operator != (const CommandClassData &rhs) const {
-     return !(*this == rhs);
-   }
- 
-   bool operator < (const CommandClassData & ) const;
- 
-   uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
-   uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;
- 
- };
- 
- void swap(CommandClassData &a, CommandClassData &b);
- 
- typedef struct _NodeData__isset {
-   _NodeData__isset() : m_sentCnt(false), m_sentFailed(false), m_retries(false), m_receivedCnt(false), m_receivedDups(false), m_rtt(false), m_sentTS(false), m_receivedTS(false), m_lastRTT(false), m_averageRTT(false), m_quality(false), m_lastReceivedMessage(false), m_ccData(false) {}
-   bool m_sentCnt;
-   bool m_sentFailed;
-   bool m_retries;
-   bool m_receivedCnt;
-   bool m_receivedDups;
-   bool m_rtt;
-   bool m_sentTS;
-   bool m_receivedTS;
-   bool m_lastRTT;
-   bool m_averageRTT;
-   bool m_quality;
-   bool m_lastReceivedMessage;
-   bool m_ccData;
- } _NodeData__isset;
- 
- class NodeData {
-  public:
- 
-   static const char* ascii_fingerprint; // = "DB994120B65B924D2C723CE2B0A136F6";
-   static const uint8_t binary_fingerprint[16]; // = {0xDB,0x99,0x41,0x20,0xB6,0x5B,0x92,0x4D,0x2C,0x72,0x3C,0xE2,0xB0,0xA1,0x36,0xF6};
- 
-   NodeData() : m_sentCnt(0), m_sentFailed(0), m_retries(0), m_receivedCnt(0), m_receivedDups(0), m_rtt(0), m_sentTS(), m_receivedTS(), m_lastRTT(0), m_averageRTT(0), m_quality(0) {
-   }
- 
-   virtual ~NodeData() throw() {}
- 
-   int32_t m_sentCnt;
-   int32_t m_sentFailed;
-   int32_t m_retries;
-   int32_t m_receivedCnt;
-   int32_t m_receivedDups;
-   int32_t m_rtt;
-   std::string m_sentTS;
-   std::string m_receivedTS;
-   int32_t m_lastRTT;
-   int32_t m_averageRTT;
-   int8_t m_quality;
-   std::vector<int8_t>  m_lastReceivedMessage;
-   std::vector<CommandClassData>  m_ccData;
- 
-   _NodeData__isset __isset;
- 
-   void __set_m_sentCnt(const int32_t val) {
-     m_sentCnt = val;
-   }
- 
-   void __set_m_sentFailed(const int32_t val) {
-     m_sentFailed = val;
-   }
- 
-   void __set_m_retries(const int32_t val) {
-     m_retries = val;
-   }
- 
-   void __set_m_receivedCnt(const int32_t val) {
-     m_receivedCnt = val;
-   }
- 
-   void __set_m_receivedDups(const int32_t val) {
-     m_receivedDups = val;
-   }
- 
-   void __set_m_rtt(const int32_t val) {
-     m_rtt = val;
-   }
- 
-   void __set_m_sentTS(const std::string& val) {
-     m_sentTS = val;
-   }
- 
-   void __set_m_receivedTS(const std::string& val) {
-     m_receivedTS = val;
-   }
- 
-   void __set_m_lastRTT(const int32_t val) {
-     m_lastRTT = val;
-   }
- 
-   void __set_m_averageRTT(const int32_t val) {
-     m_averageRTT = val;
-   }
- 
-   void __set_m_quality(const int8_t val) {
-     m_quality = val;
-   }
- 
-   void __set_m_lastReceivedMessage(const std::vector<int8_t> & val) {
-     m_lastReceivedMessage = val;
-   }
- 
-   void __set_m_ccData(const std::vector<CommandClassData> & val) {
-     m_ccData = val;
-   }
- 
-   bool operator == (const NodeData & rhs) const
-   {
-     if (!(m_sentCnt == rhs.m_sentCnt))
-       return false;
-     if (!(m_sentFailed == rhs.m_sentFailed))
-       return false;
-     if (!(m_retries == rhs.m_retries))
-       return false;
-     if (!(m_receivedCnt == rhs.m_receivedCnt))
-       return false;
-     if (!(m_receivedDups == rhs.m_receivedDups))
-       return false;
-     if (!(m_rtt == rhs.m_rtt))
-       return false;
-     if (!(m_sentTS == rhs.m_sentTS))
-       return false;
-     if (!(m_receivedTS == rhs.m_receivedTS))
-       return false;
-     if (!(m_lastRTT == rhs.m_lastRTT))
-       return false;
-     if (!(m_averageRTT == rhs.m_averageRTT))
-       return false;
-     if (!(m_quality == rhs.m_quality))
-       return false;
-     if (!(m_lastReceivedMessage == rhs.m_lastReceivedMessage))
-       return false;
-     if (!(m_ccData == rhs.m_ccData))
-       return false;
-     return true;
-   }
-   bool operator != (const NodeData &rhs) const {
-     return !(*this == rhs);
-   }
- 
-   bool operator < (const NodeData & ) const;
- 
-   uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
-   uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;
- 
- };
- 
- void swap(NodeData &a, NodeData &b);
- 
- typedef struct _GetNodeStatisticsReturnStruct__isset {
-   _GetNodeStatisticsReturnStruct__isset() : _data(false) {}
-   bool _data;
- } _GetNodeStatisticsReturnStruct__isset;
- 
- class GetNodeStatisticsReturnStruct {
-  public:
- 
-   static const char* ascii_fingerprint; // = "C5D06FBEAFB493FE97292FCD55C6E89F";
-   static const uint8_t binary_fingerprint[16]; // = {0xC5,0xD0,0x6F,0xBE,0xAF,0xB4,0x93,0xFE,0x97,0x29,0x2F,0xCD,0x55,0xC6,0xE8,0x9F};
- 
-   GetNodeStatisticsReturnStruct() {
-   }
- 
-   virtual ~GetNodeStatisticsReturnStruct() throw() {}
- 
-   NodeData _data;
- 
-   _GetNodeStatisticsReturnStruct__isset __isset;
- 
-   void __set__data(const NodeData& val) {
-     _data = val;
-   }
- 
-   bool operator == (const GetNodeStatisticsReturnStruct & rhs) const
-   {
-     if (!(_data == rhs._data))
-       return false;
-     return true;
-   }
-   bool operator != (const GetNodeStatisticsReturnStruct &rhs) const {
-     return !(*this == rhs);
-   }
- 
-   bool operator < (const GetNodeStatisticsReturnStruct & ) const;
- 
-   uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
-   uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;
- 
- };
- 
- void swap(GetNodeStatisticsReturnStruct &a, GetNodeStatisticsReturnStruct &b);
- 
  typedef struct _GetSwitchPointReturnStruct__isset {
    _GetSwitchPointReturnStruct__isset() : retval(false), o_hours(false), o_minutes(false), o_setback(false) {}
    bool retval;
--- 372,377 ----
***************
*** 1084,1140 ****
  
  void swap(Bool_ListString &a, Bool_ListString &b);
  
- typedef struct _ListUInt8_Byte__isset {
-   _ListUInt8_Byte__isset() : _value(false), _length(false) {}
-   bool _value;
-   bool _length;
- } _ListUInt8_Byte__isset;
- 
- class ListUInt8_Byte {
-  public:
- 
-   static const char* ascii_fingerprint; // = "C18DF93C44240A2B0D04E759C8DFEB90";
-   static const uint8_t binary_fingerprint[16]; // = {0xC1,0x8D,0xF9,0x3C,0x44,0x24,0x0A,0x2B,0x0D,0x04,0xE7,0x59,0xC8,0xDF,0xEB,0x90};
- 
-   ListUInt8_Byte() : _length(0) {
-   }
- 
-   virtual ~ListUInt8_Byte() throw() {}
- 
-   std::vector<int8_t>  _value;
-   int8_t _length;
- 
-   _ListUInt8_Byte__isset __isset;
- 
-   void __set__value(const std::vector<int8_t> & val) {
-     _value = val;
-   }
- 
-   void __set__length(const int8_t val) {
-     _length = val;
-   }
- 
-   bool operator == (const ListUInt8_Byte & rhs) const
-   {
-     if (!(_value == rhs._value))
-       return false;
-     if (!(_length == rhs._length))
-       return false;
-     return true;
-   }
-   bool operator != (const ListUInt8_Byte &rhs) const {
-     return !(*this == rhs);
-   }
- 
-   bool operator < (const ListUInt8_Byte & ) const;
- 
-   uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
-   uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;
- 
- };
- 
- void swap(ListUInt8_Byte &a, ListUInt8_Byte &b);
- 
  typedef struct _UInt32_ListByte__isset {
    _UInt32_ListByte__isset() : retval(false), _nodeNeighbors(false) {}
    bool retval;
--- 796,801 ----
