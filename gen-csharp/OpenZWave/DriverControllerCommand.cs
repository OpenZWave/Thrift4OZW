/**
 * Autogenerated by Thrift Compiler (1.0.0-dev)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */

namespace OpenZWave
{
  public enum DriverControllerCommand
  {
    ControllerCommand_None = 0,
    /// <summary>
    /// < No command.
    /// </summary>
    ControllerCommand_AddDevice = 1,
    /// <summary>
    /// < Add a new device or controller to the Z-Wave network.
    /// </summary>
    ControllerCommand_CreateNewPrimary = 2,
    /// <summary>
    /// < Add a new controller to the Z-Wave network. Used when old primary fails. Requires SUC.
    /// </summary>
    ControllerCommand_ReceiveConfiguration = 3,
    /// <summary>
    /// < Receive Z-Wave network configuration information from another controller.
    /// </summary>
    ControllerCommand_RemoveDevice = 4,
    /// <summary>
    /// < Remove a device or controller from the Z-Wave network.
    /// </summary>
    ControllerCommand_RemoveFailedNode = 5,
    /// <summary>
    /// < Move a node to the controller's failed nodes list. This command will only work if the node cannot respond.
    /// </summary>
    ControllerCommand_HasNodeFailed = 6,
    /// <summary>
    /// < Check whether a node is in the controller's failed nodes list.
    /// </summary>
    ControllerCommand_ReplaceFailedNode = 7,
    /// <summary>
    /// < Replace a non-responding node with another. The node must be in the controller's list of failed nodes for this command to succeed.
    /// </summary>
    ControllerCommand_TransferPrimaryRole = 8,
    /// <summary>
    /// < Make a different controller the primary.
    /// </summary>
    ControllerCommand_RequestNetworkUpdate = 9,
    /// <summary>
    /// < Request network information from the SUC/SIS.
    /// </summary>
    ControllerCommand_RequestNodeNeighborUpdate = 10,
    /// <summary>
    /// < Get a node to rebuild its neighbour list.  This method also does RequestNodeNeighbors
    /// </summary>
    ControllerCommand_AssignReturnRoute = 11,
    /// <summary>
    /// < Assign a network return routes to a device.
    /// </summary>
    ControllerCommand_DeleteAllReturnRoutes = 12,
    /// <summary>
    /// < Delete all return routes from a device.
    /// </summary>
    ControllerCommand_SendNodeInformation = 13,
    /// <summary>
    /// < Send a node information frame
    /// </summary>
    ControllerCommand_ReplicationSend = 14,
    /// <summary>
    /// < Send information from primary to secondary
    /// </summary>
    ControllerCommand_CreateButton = 15,
    /// <summary>
    /// < Create an id that tracks handheld button presses
    /// </summary>
    ControllerCommand_DeleteButton = 16,
  }
}
